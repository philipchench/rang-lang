
Statement support: conditional, iteration
Arithmetics, variables, primitives, functions
Data structures:
List: supports access by index, append, del
Later: dictionary and set

Supports:
if ㄧㄈ, elif ㄝㄌㄈ, else ㄝㄌㄙ
and ㄚㄣㄉ, or ㄛㄦ, not ㄋㄊ, is ㄧㄙ
True ㄔㄖㄨ, False ㄈㄌㄙ, None ㄋㄌ
del ㄉㄌ
for ㄈㄦ, while ㄨㄌ, break ㄅㄖㄎ, continue ㄎㄣㄊㄋ,
def ㄈㄣㄎ, return ㄖㄊㄦㄣ, pass ㄆㄙ
Python built-in functions: for i in range(5) ㄈㄦ（ㄞ、零、五、ㄧ）, len() ㄌㄣ（）, print() ㄆㄖㄣㄊ（）

Arithmetics:
+ ㄆㄙ, - ㄋㄍ, * ㄇㄌ, / ㄉㄧ, // ㄈㄉ, ** ㄆㄠ, % ㄇㄉ
> ㄍㄦ, < ㄌㄙ, = ㄧㄎ, >= ㄍㄦㄧㄎ, <= ㄌㄙㄧㄎ, == ㄧㄧㄎ, != ㄋㄝㄎ
Scope:
() （）
no indentation for scope, use ：。

Misc:
space
, 、
. ．
: ：
comment: ＃
'', “” e.g. “this is a string”
numbers:
ㄧ二三四五六七八九零點 

Primitives:
boolean, int, float/double, str

Data structures:
list: [1,2,3] ㄌㄙㄊ（一、二、三）, append() ㄚㄆㄣ（）, index e.g. arr[0] ㄧㄉ（零）, remove use del, substring ㄙㄅ（）

dictionary: {1:1, 2:2} ㄉㄎㄊ（一：ㄧ、二：二）, most methods
『』
set?
tuple?

Example:


Python3:

var1 = 3
var2 = 2
var3 = var1 * var2

def test(input1, input2):
  dict1 = {}
  for i in range(0, input1):
    dict1[i] = []
    j = 0
    while j < len(input2):
      dict1[i].append(input2[j] * i)
      j += 1
  return dict1

list1 = [1, 2, 3, 4, 5]
list1.append(var3) # 6
print("輸出： ", test(3, list1))

